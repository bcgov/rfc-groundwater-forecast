name: Groundwater Level Forecast Modeling

on:
  schedule:
    - cron: '0 18 * * *'  # Daily at noonish Pacific (20:00 UTC)
    - cron: '0 3 * * *'  # Daily at 8pm Pacific (03:00 UTC)
  push:
    branches: [main]

jobs:
  render:
    runs-on: ubuntu-latest
    environment: gw_forecast_env
    env:
      R_LIBS_USER: ~/.local/share/R/library
      TZ: America/Vancouver

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install arcgis pandas requests

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Cache R packages # Cache R packages to speed up future runs
        uses: actions/cache@v3
        with:
          path: ~/.local/share/R/library
          key: ${{ runner.os }}-r-pkgs-v1

      - name: Install system dependencies for TinyTeX
        run: |
         sudo apt-get update
         sudo apt-get install -y \
           libglpk-dev \
           fonts-liberation \
           libgdal-dev \
           libproj-dev \
           libgeos-dev \
           libsqlite3-dev \
           libudunits2-dev \
           libmagick++-dev \
           chromium-browser


      - name: Install packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::rmarkdown
            any::tinytex

      - name: Install tinytex
        run: Rscript -e 'tinytex::install_tinytex()'

      - name: Install latex packages with tinytex
        run: Rscript -e 'tinytex::tlmgr_install(c("anyfontsize", "fontspec", "xcolor", "tikz", "graphicx", "caption", "booktabs", "multirow", "longtable", "colortbl", "hyperref","wrapfig", "multicol"))'

      - name: Run forecasting R scripts
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
        run: Rscript -e 'source("00_Run_Model.R")'

      # - name: Upload results to ArcGIS Online
      #   env:
      #     ARCGIS_USER: ${{ secrets.ARCGIS_USER }}
      #     ARCGIS_PASS: ${{ secrets.ARCGIS_PASS }}
      #   run: |
      #     python python/OverwriteFS.py $ARCGIS_USER $ARCGIS_PASS 35e7636011484ad1b047750f837e28b4 RFC_GW_Forecast output/RFC_GW_Forecast.csv


